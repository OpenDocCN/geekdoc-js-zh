- en: 第一部分：基本语法
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一部分：基本语法
- en: 原文：[`jsprimer.net/basic/`](https://jsprimer.net/basic/)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[`jsprimer.net/basic/`](https://jsprimer.net/basic/)
- en: 第一部分将介绍 JavaScript 的基本语法和内置对象的用法。
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: 第一部分将介绍 JavaScript 的基本语法和内置对象的用法。
- en: '[](#summary)*目录*'
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[](#summary)*目录*'
- en: '*### [](#introduction)*JavaScript 简介*'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '*### [](#introduction)*JavaScript 简介*'
- en: '*简要介绍了 JavaScript 的用途和具有的语言特性。'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '*简要介绍了 JavaScript 的用途和具有的语言特性。'
- en: '[](#comments)*注释*'
  id: totrans-6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#comments)*注释*'
- en: '*介绍了 JavaScript 中注释的写法。注释不会被作为程序评估，因此用于对源代码进行说明。'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了 JavaScript 中注释的写法。注释不会被作为程序评估，因此用于对源代码进行说明。'
- en: '[](#variables)*变量和声明*'
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#variables)*变量和声明*'
- en: '*介绍了在 JavaScript 中声明变量的方法。将介绍 const、let、var 等声明变量的方法。将介绍这些操作的区别和使用方法。'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了在 JavaScript 中声明变量的方法。将介绍 const、let、var 等声明变量的方法。将介绍这些操作的区别和使用方法。'
- en: '[](#read-eval-print)*值的评估和显示*'
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#read-eval-print)*值的评估和显示*'
- en: '*介绍了在浏览器中执行 JavaScript 代码的方法。还将介绍如何解决程序执行时遇到的错误。将错误分为两种，语法错误和运行时错误，并介绍各自的问题和解决方法。'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了在浏览器中执行 JavaScript 代码的方法。还将介绍如何解决程序执行时遇到的错误。将错误分为两种，语法错误和运行时错误，并介绍各自的问题和解决方法。'
- en: '[](#data-type)*数据类型和语法*'
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#data-type)*数据类型和语法*'
- en: '*介绍了 JavaScript 值的数据类型。数据类型大致分为原始类型和对象，将分别介绍每种数据类型并附有简单的代码示例。某些数据类型提供了用于简单描述数据的语法，也将一并介绍这些语法。'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了 JavaScript 值的数据类型。数据类型大致分为原始类型和对象，将分别介绍每种数据类型并附有简单的代码示例。某些数据类型提供了用于简单描述数据的语法，也将一并介绍这些语法。'
- en: '[](#operator)*运算符*'
  id: totrans-14
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#operator)*运算符*'
- en: '*介绍了 JavaScript 中的运算符。由于运算符是用符号表示的，因此很难搜索。本章总结了主要的运算符。当遇到不熟悉的运算符时，只需重新阅读即可，无需逐个阅读。'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了 JavaScript 中的运算符。由于运算符是用符号表示的，因此很难搜索。本章总结了主要的运算符。当遇到不熟悉的运算符时，只需重新阅读即可，无需逐个阅读。'
- en: '[](#implicit-coercion)*隐式类型转换*'
  id: totrans-16
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#implicit-coercion)*隐式类型转换*'
- en: '*JavaScript 的隐式类型转换是导致意外行为的原因之一。将介绍隐式类型转换导致的具体代码示例以及难以预测的情况。还将介绍显式转换的方法。'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*JavaScript 的隐式类型转换是导致意外行为的原因之一。将介绍隐式类型转换导致的具体代码示例以及难以预测的情况。还将介绍显式转换的方法。'
- en: '[](#function-declaration)*函数和声明*'
  id: totrans-18
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#function-declaration)*函数和声明*'
- en: '*介绍了定义 JavaScript 函数的方法。将介绍函数声明、函数表达式、箭头函数等定义函数或方法的方法。还将介绍如何处理函数参数以及函数和方法的区别。'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了定义 JavaScript 函数的方法。将介绍函数声明、函数表达式、箭头函数等定义函数或方法的方法。还将介绍如何处理函数参数以及函数和方法的区别。'
- en: '[](#statement-expression)*语句和表达式*'
  id: totrans-20
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#statement-expression)*语句和表达式*'
- en: '*介绍了构成 JavaScript 源代码的语句和表达式的概念。通过理解语句和表达式的区别，可以了解何时应该加入分号。虽然内容较为抽象，但即使不完全理解也没有问题。'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了构成 JavaScript 源代码的语句和表达式的概念。通过理解语句和表达式的区别，可以了解何时应该加入分号。虽然内容较为抽象，但即使不完全理解也没有问题。'
- en: '[](#condition)*条件分支*'
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#condition)*条件分支*'
- en: '*介绍了用于处理 JavaScript 条件分支的 if 语句和 switch 语句。还将介绍如何解决嵌套条件分支导致可读性下降的问题。'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了用于处理 JavaScript 条件分支的 if 语句和 switch 语句。还将介绍如何解决嵌套条件分支导致可读性下降的问题。'
- en: '[](#loop)*循环和迭代处理*'
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#loop)*循环和迭代处理*'
- en: '*介绍了使用 for 循环和 while 循环进行迭代处理。还将介绍 Array 方法也可以实现相同的迭代处理。'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了使用 for 循环和 while 循环进行迭代处理。还将介绍 Array 方法也可以实现相同的迭代处理。'
- en: '[](#object)*对象*'
  id: totrans-26
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#object)*对象*'
- en: '*Object 是构成对象基础的要素。将介绍对象和属性的创建、更新、删除等基本操作。'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '*Object 是构成对象基础的要素。将介绍对象和属性的创建、更新、删除等基本操作。'
- en: '[](#prototype-object)*原型对象*'
  id: totrans-28
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#prototype-object)*原型对象*'
- en: '*JavaScript 具有特殊的原型对象。通过原型对象，将方法等特性从一个对象继承到另一个对象。将介绍通过原型对象实现的继承机制。'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '*JavaScript 具有特殊的原型对象。通过原型对象，将方法等特性从一个对象继承到另一个对象。将介绍通过原型对象实现的继承机制。'
- en: '[](#array)*数组*'
  id: totrans-30
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#array)*数组*'
- en: '*数组是可以按顺序存储值的对象。将介绍数组的创建、更新、删除等基本操作以及实际用法。还将介绍数组中破坏性方法和非破坏性方法的区别。'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '*数组是可以按顺序存储值的对象。将介绍数组的创建、更新、删除等基本操作以及实际用法。还将介绍数组中破坏性方法和非破坏性方法的区别。'
- en: '[](#string)*字符串*'
  id: totrans-32
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#string)*字符串*'
- en: '*介绍了使用字符串文字创建字符串以及基本的字符串操作，如搜索和替换。还将介绍与正则表达式结合使用的字符串操作以及使用标记模板函数进行模板处理等。'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了使用字符串文字创建字符串以及基本的字符串操作，如搜索和替换。还将介绍与正则表达式结合使用的字符串操作以及使用标记模板函数进行模板处理等。'
- en: '[](#string-unicode)*字符串和 Unicode*'
  id: totrans-34
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#string-unicode)*字符串和 Unicode*'
- en: '*介绍了与 JavaScript 采用的 Unicode 相关的 String 方法。将介绍 String 方法和处理字符串时需要意识到的 UTF-16
    编码。'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了与 JavaScript 采用的 Unicode 相关的 String 方法。将介绍 String 方法和处理字符串时需要意识到的 UTF-16
    编码。'
- en: '[](#wrapper-object)*包装对象*'
  id: totrans-36
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#wrapper-object)*包装对象*'
- en: '*介绍了 JavaScript 中原始类型的值如何调用内置对象的方法等机制，即包装对象。将确认原始类型如何在运行时转换为对象。'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了 JavaScript 中原始类型的值如何调用内置对象的方法等机制，即包装对象。将确认原始类型如何在运行时转换为对象。'
- en: '[](#function-scope)*函数和作用域*'
  id: totrans-38
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#function-scope)*函数和作用域*'
- en: '*介绍了决定变量等可引用范围的概念，称为作用域。将介绍块作用域、函数作用域等的作用以及多个作用域重叠时变量引用的决定方式。还将介绍与作用域相关的特性，如闭包。'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了决定变量等可引用范围的概念，称为作用域。将介绍块作用域、函数作用域等的作用以及多个作用域重叠时变量引用的决定方式。还将介绍与作用域相关的特性，如闭包。'
- en: '[](#function-this)*函数和 this*'
  id: totrans-40
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#function-this)*函数和 this*'
- en: '*介绍了 JavaScript 中关键字`this`的工作原理。由于`this`的引用取决于条件，因此将根据不同条件介绍`this`的工作方式。介绍了如何通过代码示例使看似复杂的`this`行为变得可预测。'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了 JavaScript 中关键字`this`的工作原理。由于`this`的引用取决于条件，因此将根据不同条件介绍`this`的工作方式。介绍了如何通过代码示例使看似复杂的`this`行为变得可预测。'
- en: '[](#class)*类*'
  id: totrans-42
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#class)*类*'
- en: '*介绍了 JavaScript 中类的定义和继承方法。介绍了基于原型的语言 JavaScript 是如何实现继承等功能的。'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了 JavaScript 中类的定义和继承方法。介绍了基于原型的语言 JavaScript 是如何实现继承等功能的。'
- en: '[](#error-try-catch)*异常处理*'
  id: totrans-44
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#error-try-catch)*异常处理*'
- en: '*介绍了 JavaScript 中的异常处理。介绍了 try...catch 语法的用法和 Error 对象。还介绍了在发生错误时如何阅读错误消息以及调试方法。'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了 JavaScript 中的异常处理。介绍了 try...catch 语法的用法和 Error 对象。还介绍了在发生错误时如何阅读错误消息以及调试方法。'
- en: '[](#async)*异步处理:回调/Promise/Async 函数*'
  id: totrans-46
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#async)*异步处理:回调/Promise/Async 函数*'
- en: '*介绍了 JavaScript 中的异步处理。介绍了同步处理和异步处理的区别以及为什么异步处理变得重要。介绍了使用回调风格、Promise、Async
    函数进行异步处理的方法。'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了 JavaScript 中的异步处理。介绍了同步处理和异步处理的区别以及为什么异步处理变得重要。介绍了使用回调风格、Promise、Async
    函数进行异步处理的方法。'
- en: '[](#map-and-set)*Map/Set*'
  id: totrans-48
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#map-and-set)*Map/Set*'
- en: '*介绍了处理数据集合的内置对象 Map 和 Set。从创建对象的方法和更新方法到实际使用案例进行介绍。'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了处理数据集合的内置对象 Map 和 Set。从创建对象的方法和更新方法到实际使用案例进行介绍。'
- en: '[](#json)*JSON*'
  id: totrans-50
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#json)*JSON*'
- en: '*介绍了基于 JavaScript 对象字面量创建的数据格式 JSON。还介绍了如何在 JavaScript 中读写 JSON 的内置对象的用法。'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了基于 JavaScript 对象字面量创建的数据格式 JSON。还介绍了如何在 JavaScript 中读写 JSON 的内置对象的用法。'
- en: '[](#date)*日期*'
  id: totrans-52
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#date)*日期*'
- en: '*介绍了处理日期和时间的内置对象 Date。'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了处理日期和时间的内置对象 Date。'
- en: '[](#math)*数学*'
  id: totrans-54
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#math)*数学*'
- en: '*介绍了提供数学常数和函数的内置对象 Math。'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了提供数学常数和函数的内置对象 Math。'
- en: '[](#module)*ECMAScript 模块*'
  id: totrans-56
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#module)*ECMAScript 模块*'
- en: '*介绍了 JavaScript 模块（ECMAScript 模块）。'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了 JavaScript 模块（ECMAScript 模块）。'
- en: '[](#ecmascript)*ECMAScript*'
  id: totrans-58
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#ecmascript)*ECMAScript*'
- en: '*介绍了 JavaScript 规范 ECMAScript。介绍了 ECMAScript 的历史以及规范制定的过程。'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '*介绍了 JavaScript 规范 ECMAScript。介绍了 ECMAScript 的历史以及规范制定的过程。'
- en: '[](#other-parts)*第一部分: 结语*'
  id: totrans-60
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: '[](#other-parts)*第一部分: 结语*'
- en: '*在第一部分结束时，简要介绍了书中未涉及的其他语法和内置对象。还介绍了如何查找不熟悉的语法和内置对象的用法。'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '*在第一部分结束时，简要介绍了书中未涉及的其他语法和内置对象。还介绍了如何查找不熟悉的语法和内置对象的用法。'
