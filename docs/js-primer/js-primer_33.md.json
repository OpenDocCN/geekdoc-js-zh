["```\nconst foo = \"foo\";\n// 宣言済みのオブジェクトを名前つきエクスポートする\nexport { foo }; \n```", "```\n// 宣言と同時に名前つきエクスポートする\nexport function bar() { }; \n```", "```\nexport const foo = \"foo\";\nexport function bar() { } \n```", "```\n// 名前つきエクスポートされたfooとbarをインポートする\nimport { foo, bar } from \"./my-module.js\";\nconsole.log(foo); // => \"foo\"\nconsole.log(bar); // => function bar() \n```", "```\nconst internalFoo = \"foo\";\n// internalFoo 変数をfooとして名前つきエクスポートする\nexport { internalFoo as foo }; \n```", "```\n// fooとして名前つきエクスポートされた変数をmyFooとしてインポートする\nimport { foo as myFoo } from \"./named-export-alias.js\";\nconsole.log(myFoo); // => \"foo\" \n```", "```\nconst foo = \"foo\";\n// foo 変数の値をデフォルトエクスポートする\nexport default foo; \n```", "```\n// 宣言と同時に関数をデフォルトエクスポートする\nexport default function() {} \n```", "```\n// 変数宣言と同時にデフォルトエクスポートはできない\nexport default const foo = \"foo\", bar = \"bar\"; \n```", "```\nexport default {\n    baz: \"baz\"\n}; \n```", "```\n// デフォルトエクスポートをmyModuleとしてインポートする\nimport myModule from \"./my-module.js\";\nconsole.log(myModule); // => { baz: \"baz\" } \n```", "```\nconst foo = \"foo\";\n// foo 変数の値をデフォルトエクスポートする\nexport { foo as default }; \n```", "```\n// デフォルトエクスポートをmyModuleとしてインポートする\nimport { default as myModule } from \"./my-module.js\";\nconsole.log(myModule); // => { baz: \"baz\" } \n```", "```\n// myModuleとしてデフォルトインポートし、\n// fooを名前つきインポートする\nimport myModule, { foo } from \"./my-module.js\";\nconsole.log(foo); // => \"foo\"\nconsole.log(myModule); // => { baz: \"baz\" } \n```", "```\n// ./my-module.jsのすべての名前つきエクスポートを再エクスポートする\nexport * from \"./my-module.js\";\n// [ES2020] ./my-module.jsのすべての名前つきエクスポートを名前空間オブジェクトとして再エクスポートする\nexport * as myNameSpace from \"./my-module.js\";\n// ./my-module.jsの名前つきエクスポートを選んで再エクスポートする\nexport { foo, bar } from \"./my-module.js\";\n// ./my-module.jsの名前つきエクスポートにエイリアスをつけて再エクスポートする\nexport { foo as myModuleFoo, bar as myModuleBar } from \"./my-module.js\";\n// ./my-module.jsのデフォルトエクスポートをデフォルトエクスポートとして再エクスポートする\nexport { default } from \"./my-module.js\";\n// ./my-module.jsのデフォルトエクスポートを名前つきエクスポートとして再エクスポートする\nexport { default as myModuleDefault } from \"./my-module.js\";\n// ./my-module.jsの名前つきエクスポートをデフォルトエクスポートとして再エクスポートする\nexport { foo as default } from \"./my-module.js\"; \n```", "```\nexport const foo = \"foo\";\nexport function bar() { }\nexport default {\n    baz: \"baz\"\n}; \n```", "```\n// すべての名前つきエクスポートをmyModuleオブジェクトとしてまとめてインポートする\nimport * as myModule from \"./my-module.js\";\n// fooとして名前つきエクスポートされた値にアクセスする\nconsole.log(myModule.foo); // => \"foo\"\n// defaultとしてデフォルトエクスポートされた値にアクセスする\nconsole.log(myModule.default); // => { baz: \"baz\" } \n```", "```\n// グローバル変数を操作する(副作用)\nwindow.foo = \"foo\"; \n```", "```\n// ./side-effects.jsのグローバルコードが実行される\nimport \"./side-effects.js\"; \n```", "```\n<!-- my-module.jsをECMAScriptモジュールとして読み込む -->\n<script type=\"module\" src=\"./my-module.js\"></script>\n<!-- インラインでも同じ -->\n<script type=\"module\"> import { foo } from \"./my-module.js\"; </script> \n```"]