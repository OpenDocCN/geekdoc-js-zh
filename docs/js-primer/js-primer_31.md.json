["```\n// 現在の時刻を表すインスタンスを作成する\nconst now = new Date();\n// 時刻値だけが欲しい場合にはDate.nowメソッドを使う\nconsole.log(Date.now());\n\n// 時刻値を取得する\nconsole.log(now.getTime());\n// 時刻をISO 8601 形式の文字列で表示する\nconsole.log(now.toISOString()); \n```", "```\n// 時刻のミリ秒値を直接指定する形式\n// 1136214245999はUTCにおける\"2006 年 1 月 2 日 15 時 04 分 05 秒 999\"を表す\nconst date = new Date(1136214245999);\n// 末尾の'Z'はUTCであることを表す\nconsole.log(date.toISOString()); // => \"2006-01-02T15:04:05.999Z\" \n```", "```\n// UTCにおける\"2006 年 1 月 2 日 15 時 04 分 05 秒 999\"を表すISO 8601 形式の文字列\nconst inUTC = new Date(\"2006-01-02T15:04:05.999Z\");\nconsole.log(inUTC.toISOString()); // => \"2006-01-02T15:04:05.999Z\"\n\n// 上記の例とは異なり、UTCであることを表す'Z'がついていないことに注意\n// Asia/Tokyo(+09:00)で実行すると、UTCにおける表記は9 時間前の06 時 04 分 05 秒になる\nconst inLocal = new Date(\"2006-01-02T15:04:05.999\");\nconsole.log(inLocal.toISOString()); // \"2006-01-02T06:04:05.999Z\" (Asia/Tokyoの場合) \n```", "```\nnew Date(year, month, day, hour, minutes, seconds, milliseconds); \n```", "```\n// 実行環境における\"2006 年 1 月 2 日 15 時 04 分 05 秒 999\"を表す\n// タイムゾーンを指定することはできない\nconst date1 = new Date(2006, 0, 2, 15, 4, 5, 999);\nconsole.log(date1.toISOString()); // \"2006-01-02T06:04:05.999Z\" (Asia/Tokyoの場合)\n\n// Date.UTCメソッドを使うとUTCに固定できる\nconst ms = Date.UTC(2006, 0, 2, 15, 4, 5, 999);\n// 時刻値を渡すコンストラクタと併用する\nconst date2 = new Date(ms);\nconsole.log(date2.toISOString()); // => \"2006-01-02T15:04:05.999Z\" \n```", "```\n// 不正なDateインスタンスを作成する\nconst invalid = new Date(\"\");\nconsole.log(invalid.getTime()); // => NaN\nconsole.log(invalid.toString()); // => \"Invalid Date\"\n// 不正なDateインスタンスかを判定\nconsole.log(Number.isNaN(invalid.getTime())); // => true \n```", "```\n// YYYY/MM/DD 形式の文字列に変換する関数\nfunction formatDate(date) {\n    const yyyy = String(date.getFullYear());\n    // Stringの`padStart`メソッド（ES2017）で2 桁になるように0 埋めする\n    const mm = String(date.getMonth() + 1).padStart(2, \"0\");\n    const dd = String(date.getDate()).padStart(2, \"0\");\n    return `${yyyy}/${mm}/${dd}`;\n}\n\nconst date = new Date(\"2006-01-02T15:04:05.999\");\nconsole.log(formatDate(date)); // => \"2006/01/02\" \n```", "```\n// getTimezoneOffsetはインスタンスメソッドなので、インスタンスが必要\nconst now = new Date();\n// 時間単位にしたタイムゾーンオフセット\nconst timezoneOffsetInHours = now.getTimezoneOffset() / 60;\n// UTCの現在の時間を計算できる\nconsole.log(`Hours in UTC: ${now.getHours() + timezoneOffsetInHours}`); \n```", "```\n// Day.jsで現在時刻のDay.jsオブジェクトを作る\nconst now = dayjs();\n// addメソッドで10 分進める\nconst future = now.add(10, \"minute\");\n// formatメソッドで任意の書式の文字列に変換する\nconsole.log(future.format(\"YYYY/MM/DD HH:mm\")); \n```"]