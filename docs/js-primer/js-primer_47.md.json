["```\n$ npm install [[email protected]](/cdn-cgi/l/email-protection) \n```", "```\nimport { program } from \"commander\";\nimport * as fs from \"node:fs/promises\";\n// markedモジュールからmarkedオブジェクトをインポートする\nimport { marked } from \"marked\";\n\nprogram.parse(process.argv);\nconst filePath = program.args[0];\n\nfs.readFile(filePath, { encoding: \"utf8\" }).then(file => {\n    // MarkdownファイルをHTML 文字列に変換する\n    const html = marked.parse(file);\n    console.log(html);\n}).catch(err => {\n    console.error(err.message);\n    process.exit(1);\n}); \n```", "```\n# サンプルファイル\n\nこれはサンプルです。\nhttps://jsprimer.net/\n\n- サンプル1\n- サンプル2 \n```", "```\n<h1 id=\"サンプルファイル\">サンプルファイル</h1>\n<p>これはサンプルです。\n<a href=\"https://jsprimer.net/\">https://jsprimer.net/</a></p>\n<ul>\n<li>サンプル1</li>\n<li>サンプル2</li>\n</ul> \n```", "```\nimport { program } from \"commander\";\nimport * as fs from \"node:fs/promises\";\nimport { marked } from \"marked\";\n\nprogram.parse(process.argv);\nconst filePath = program.args[0];\n\nfs.readFile(filePath, { encoding: \"utf8\" }).then(file => {\n    // gfmオプションを無効にする\n    const html = marked.parse(file, {\n        gfm: false\n    });\n    console.log(html);\n}).catch(err => {\n    console.error(err.message);\n    process.exit(1);\n}); \n```", "```\n<h1 id=\"サンプルファイル\">サンプルファイル</h1>\n<p>これはサンプルです。\nhttps://jsprimer.net/</p>\n<ul>\n<li>サンプル1</li>\n<li>サンプル2</li>\n</ul> \n```", "```\n$ node main.js --gfm sample.md \n```", "```\n// gfmオプションを定義する\nprogram.option(\"--gfm\", \"GFMを有効にする\");\n// コマンドライン引数をパースする\nprogram.parse(process.argv);\n// オプションのパース結果をオブジェクトとして取得する\nconst options = program.opts();\nconsole.log(options.gfm); \n```", "```\n// コマンドライン引数のオプションを取得する\nconst options = program.opts();\n\n// コマンドライン引数で指定されなかったオプションにデフォルト値を上書きする\nconst cliOptions = {\n    gfm: options.gfm ?? false,\n}; \n```", "```\nimport { program } from \"commander\";\nimport * as fs from \"node:fs/promises\";\nimport { marked } from \"marked\";\n\n// gfmオプションを定義する\nprogram.option(\"--gfm\", \"GFMを有効にする\");\nprogram.parse(process.argv);\nconst filePath = program.args[0];\n\n// コマンドライン引数のオプションを取得する\nconst options = program.opts();\n\n// コマンドライン引数で指定されなかったオプションにデフォルト値を上書きする\nconst cliOptions = {\n    gfm: options.gfm ?? false,\n};\n\nfs.readFile(filePath, { encoding: \"utf8\" }).then(file => {\n    const html = marked.parse(file, {\n        // オプションの値を使用する\n        gfm: cliOptions.gfm,\n    });\n    console.log(html);\n}).catch(err => {\n    console.error(err.message);\n    process.exit(1);\n}); \n```", "```\n$ node main.js sample.md\n<h1 id=\"サンプルファイル\">サンプルファイル</h1>\n<p>これはサンプルです。\nhttps://jsprimer.net/</p>\n<ul>\n<li>サンプル1</li>\n<li>サンプル2</li>\n</ul> \n```", "```\n$ node main.js --gfm sample.md\n<h1 id=\"サンプルファイル\">サンプルファイル</h1>\n<p>これはサンプルです。\n<a href=\"https://jsprimer.net/\">https://jsprimer.net/</a></p>\n<ul>\n<li>サンプル1</li>\n<li>サンプル2</li>\n</ul> \n```"]