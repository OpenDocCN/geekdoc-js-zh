["```\nfunction main() {\n    fetchUserInfo(\"js-primer-example\");\n}\n\nfunction fetchUserInfo(userId) {\n    fetch(`https://api.github.com/users/${encodeURIComponent(userId)}`)\n        .then(response => {\n            if (!response.ok) {\n                console.error(\"エラーレスポンス\", response);\n            } else {\n                return response.json().then(userInfo => {\n                    // HTMLの組み立て\n                    const view = createView(userInfo);\n                    // HTMLの挿入\n                    displayView(view);\n                });\n            }\n        }).catch(error => {\n            console.error(error);\n        });\n}\n\nfunction createView(userInfo) {\n    return escapeHTML`\n    <h4>${userInfo.name} (@${userInfo.login})</h4>\n    <img src=\"${userInfo.avatar_url}\" alt=\"${userInfo.login}\" height=\"100\">\n    <dl>\n        <dt>Location</dt>\n        <dd>${userInfo.location}</dd>\n        <dt>Repositories</dt>\n        <dd>${userInfo.public_repos}</dd>\n    </dl>\n    `;\n}\n\nfunction displayView(view) {\n    const result = document.getElementById(\"result\");\n    result.innerHTML = view;\n} \n```", "```\n<!DOCTYPE html>\n<html lang=\"ja\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Ajax Example</title>\n  </head>\n  <body>\n    <h2>GitHub User Info</h2>\n\n    <input id=\"userId\" type=\"text\" value=\"js-primer-example\" />\n    <button onclick=\"main();\">Get user info</button>\n\n    <div id=\"result\"></div>\n\n    <script src=\"index.js\"></script>\n  </body>\n</html> \n```", "```\nfunction main() {\n    fetchUserInfo(\"js-primer-example\")\n        .catch((error) => {\n            // Promiseチェーンの中で発生したエラーを受け取る\n            console.error(`エラーが発生しました (${error})`);\n        });\n}\n\nfunction fetchUserInfo(userId) {\n    // fetchの返り値のPromiseをreturnする\n    return fetch(`https://api.github.com/users/${encodeURIComponent(userId)}`)\n        .then(response => {\n            if (!response.ok) {\n                // エラーレスポンスからRejectedなPromiseを作成して返す\n                return Promise.reject(new Error(`${response.status}: ${response.statusText}`));\n            } else {\n                return response.json().then(userInfo => {\n                    // HTMLの組み立て\n                    const view = createView(userInfo);\n                    // HTMLの挿入\n                    displayView(view);\n                });\n            }\n        })\n        .catch(err => {\n            return Promise.reject(new Error(`Failed fetch user(id: ${userId}) info`, { cause: err }));\n        });\n} \n```", "```\nfunction main() {\n    fetchUserInfo(\"js-primer-example\")\n        // ここではJSONオブジェクトで解決されるPromise\n        .then((userInfo) => createView(userInfo))\n        // ここではHTML 文字列で解決されるPromise\n        .then((view) => displayView(view))\n        // Promiseチェーンでエラーがあった場合はキャッチされる\n        .catch((error) => {\n            console.error(`エラーが発生しました (${error})`);\n        });\n}\n\nfunction fetchUserInfo(userId) {\n    return fetch(`https://api.github.com/users/${encodeURIComponent(userId)}`)\n        .then(response => {\n            if (!response.ok) {\n                return Promise.reject(new Error(`${response.status}: ${response.statusText}`));\n            } else {\n                // JSONオブジェクトで解決されるPromiseを返す\n                return response.json();\n            }\n        })\n        .catch(err => {\n            return Promise.reject(new Error(`Failed fetch user(id: ${userId}) info`, { cause: err }));\n        });\n} \n```", "```\nasync function main() {\n    try {\n        const userInfo = await fetchUserInfo(\"js-primer-example\");\n        const view = createView(userInfo);\n        displayView(view);\n    } catch (error) {\n        console.error(`エラーが発生しました (${error})`);\n    }\n} \n```", "```\n<!DOCTYPE html>\n<html lang=\"ja\">\n  <head>\n    <meta charset=\"utf-8\" />\n    <title>Ajax Example</title>\n  </head>\n  <body>\n    <h2>GitHub User Info</h2>\n\n    <input id=\"userId\" type=\"text\" value=\"js-primer-example\" />\n    <button onclick=\"main();\">Get user info</button>\n\n    <div id=\"result\"></div>\n\n    <script src=\"index.js\"></script>\n  </body>\n</html> \n```", "```\nasync function main() {\n    try {\n        const userId = getUserId();\n        const userInfo = await fetchUserInfo(userId);\n        const view = createView(userInfo);\n        displayView(view);\n    } catch (error) {\n        console.error(`エラーが発生しました (${error})`);\n    }\n}\n\nfunction fetchUserInfo(userId) {\n    return fetch(`https://api.github.com/users/${encodeURIComponent(userId)}`)\n        .then(response => {\n            if (!response.ok) {\n                return Promise.reject(new Error(`${response.status}: ${response.statusText}`));\n            } else {\n                return response.json();\n            }\n        });\n}\n\nfunction getUserId() {\n    return document.getElementById(\"userId\").value;\n}\n\nfunction createView(userInfo) {\n    return escapeHTML`\n    <h4>${userInfo.name} (@${userInfo.login})</h4>\n    <img src=\"${userInfo.avatar_url}\" alt=\"${userInfo.login}\" height=\"100\">\n    <dl>\n        <dt>Location</dt>\n        <dd>${userInfo.location}</dd>\n        <dt>Repositories</dt>\n        <dd>${userInfo.public_repos}</dd>\n    </dl>\n    `;\n}\n\nfunction displayView(view) {\n    const result = document.getElementById(\"result\");\n    result.innerHTML = view;\n}\n\nfunction escapeSpecialChars(str) {\n    return str\n        .replace(/&/g, \"&amp;\")\n        .replace(/</g, \"&lt;\")\n        .replace(/>/g, \"&gt;\")\n        .replace(/\"/g, \"&quot;\")\n        .replace(/'/g, \"&#039;\");\n}\n\nfunction escapeHTML(strings, ...values) {\n    return strings.reduce((result, str, i) => {\n        const value = values[i - 1];\n        if (typeof value === \"string\") {\n            return result + escapeSpecialChars(value) + str;\n        } else {\n            return result + String(value) + str;\n        }\n    });\n} \n```"]