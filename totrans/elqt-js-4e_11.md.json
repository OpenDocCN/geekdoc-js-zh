["```js\nconst names = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n               \"Thursday\", \"Friday\", \"Saturday\"];\n\nexport function dayName(number) {\n  return names[number];\n}\nexport function dayNumber(name) {\n  return names.indexOf(name);\n}\n```", "```js\nimport {dayName} from \"./dayname.js\";\nlet now = new Date();\nconsole.log(`Today is ${dayName(now.getDay())}`);\n// → Today is Monday\n```", "```js\nimport {dayName as nomDeJour} from \"./dayname.js\";\nconsole.log(nomDeJour(3));\n// → Wednesday\n```", "```js\nexport default [\"Winter\", \"Spring\", \"Summer\", \"Autumn\"];\n```", "```js\nimport seasonNames from \"./seasonname.js\";\n```", "```js\nimport * as dayName from \".dayname.js\";\nconsole.log(dayName.dayName(3));\n// → Wednesday\n```", "```js\nimport {parse} from \"ini\";\n\nconsole.log(parse(\"x = 10\\ny = 20\"));\n// → {x: \"10\", y: \"20\"}\n```", "```js\nconst weekDay = function() {\n  const names = [\"Sunday\", \"Monday\", \"Tuesday\", \"Wednesday\",\n                 \"Thursday\", \"Friday\", \"Saturday\"];\n  return {\n    name(number) { return names[number]; },\n    number(name) { return names.indexOf(name); }\n  };\n}();\n\nconsole.log(weekDay.name(weekDay.number(\"Sunday\")));\n// → Sunday\n```", "```js\nconst ordinal = require(\"ordinal\");\nconst {days, months} = require(\"date-names\");\n\nexports.formatDate = function(date, format) {\n  return format.replace(/YYYY|M(MMM)?|Do?|dddd/g, tag => {\n    if (tag == \"YYYY\") return date.getFullYear();\n    if (tag == \"M\") return date.getMonth();\n    if (tag == \"MMMM\") return months[date.getMonth()];\n    if (tag == \"D\") return date.getDate();\n    if (tag == \"Do\") return ordinal(date.getDate());\n    if (tag == \"dddd\") return days[date.getDay()];\n  });\n};\n```", "```js\nconst {formatDate} = require(\"./format-date.js\");\n\nconsole.log(formatDate(new Date(2017, 9, 13),\n                       \"dddd the Do\"));\n// → Friday the 13th\n```", "```js\nfunction require(name) {\n  if (!(name in require.cache)) {\n    let code = readFile(name);\n    let exports = require.cache[name] = {};\n    let wrapper = Function(\"require, exports\", code);\n    wrapper(require, exports);\n  }\n  return require.cache[name];\n}\nrequire.cache = Object.create(null);\n```", "```js\nconst {find_path} = require(\"dijkstrajs\");\n\nlet graph = {};\nfor (let node of Object.keys(roadGraph)) {\n  let edges = graph[node] = {};\n  for (let dest of roadGraph[node]) {\n    edges[dest] = 1;\n  }\n}\n\nconsole.log(find_path(graph, \"Post Office\", \"Cabin\"));\n// → [\"Post Office\", \"Alice's House\", \"Cabin\"]\n```", "```js\nroads\nbuildGraph\nroadGraph\nVillageState\nrunRobot\nrandomPick\nrandomRobot\nmailRoute\nrouteRobot\nfindRoute\ngoalOrientedRobot\n```"]