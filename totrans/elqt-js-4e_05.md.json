["```js\nlet listOfNumbers = [2, 3, 5, 7, 11];\nconsole.log(listOfNumbers[2]);\n// → 5\nconsole.log(listOfNumbers[0]);\n// → 2\nconsole.log(listOfNumbers[2 - 1]);\n// → 3\n```", "```js\nnull.length;\n// → TypeError: null has no properties\n```", "```js\nlet doh = \"Doh\";\nconsole.log(typeof doh.toUpperCase);\n// → function\nconsole.log(doh.toUpperCase());\n// → DOH\n```", "```js\nlet sequence = [1, 2, 3];\nsequence.push(4);\nsequence.push(5);\nconsole.log(sequence);\n// → [1, 2, 3, 4, 5]\nconsole.log(sequence.pop());\n// → 5\nconsole.log(sequence);\n// → [1, 2, 3, 4]\n```", "```js\nlet day1 = {\n  squirrel: false,\n  events: [\"work\", \"touched tree\", \"pizza\", \"running\"]\n};\nconsole.log(day1.squirrel);\n// → false\nconsole.log(day1.wolf);\n// → undefined\nday1.wolf = false;\nconsole.log(day1.wolf);\n// → false\n```", "```js\nlet descriptions = {\n  work: \"Went to work\",\n  \"touched tree\": \"Touched a tree\"\n};\n```", "```js\nlet anObject = {left: 1, right: 2};\nconsole.log(anObject.left);\n// → 1\ndelete anObject.left;\nconsole.log(anObject.left);\n// → undefined\nconsole.log(\"left\" in anObject);\n// → false\nconsole.log(\"right\" in anObject);\n// → true\n```", "```js\nconsole.log(Object.keys({x: 0, y: 0, z: 2}));\n// → [\"x\", \"y\", \"z\"]\n```", "```js\nlet objectA = {a: 1, b: 2};\nObject.assign(objectA, {b: 3, c: 4});\nconsole.log(objectA);\n// → {a: 1, b: 3, c: 4}\n```", "```js\nlet journal = [\n  {events: [\"work\", \"touched tree\", \"pizza\",\n            \"running\", \"television\"],\n   squirrel: false},\n  {events: [\"work\", \"ice cream\", \"cauliflower\",\n            \"lasagna\", \"touched tree\", \"brushed teeth\"],\n   squirrel: false},\n  {events: [\"weekend\", \"cycling\", \"break\", \"peanuts\",\n            \"beer\"],\n   squirrel: true},\n  /* And so on... */\n];\n```", "```js\nlet object1 = {value: 10};\nlet object2 = object1;\nlet object3 = {value: 10};\n\nconsole.log(object1 == object2);\n// → true\nconsole.log(object1 == object3);\n// → false\n\nobject1.value = 15;\nconsole.log(object2.value);\n// → 15\nconsole.log(object3.value);\n// → 10\n```", "```js\nconst score = {visitors: 0, home: 0};\n// This is OK\nscore.visitors = 1;\n// This isn't allowed\nscore = {visitors: 1, home: 1};\n```", "```js\nlet journal = [];\n\nfunction addEntry(events, squirrel) {\n  journal.push({events, squirrel});\n}\n```", "```js\naddEntry([\"work\", \"touched tree\", \"pizza\", \"running\",\n          \"television\"], false);\naddEntry([\"work\", \"ice cream\", \"cauliflower\", \"lasagna\",\n          \"touched tree\", \"brushed teeth\"], false);\naddEntry([\"weekend\", \"cycling\", \"break\", \"peanuts\",\n          \"beer\"], true);\n```", "```js\nfunction phi(table) {\n  return (table[3] * table[0] - table[2] * table[1]) /\n    Math.sqrt((table[2] + table[3]) *\n              (table[0] + table[1]) *\n              (table[1] + table[3]) *\n              (table[0] + table[2]));\n}\n\nconsole.log(phi([76, 9, 4, 1]));\n// → 0.068599434\n```", "```js\nfunction tableFor(event, journal) {\n  let table = [0, 0, 0, 0];\n  for (let i = 0; i < journal.length; i++) {\n    let entry = journal[i], index = 0;\n    if (entry.events.includes(event)) index += 1;\n    if (entry.squirrel) index += 2;\n    table[index] += 1;\n  }\n  return table;\n}\n\nconsole.log(tableFor(\"pizza\", JOURNAL));\n// → [76, 9, 4, 1]\n```", "```js\nfor (let i = 0; i < JOURNAL.length; i++) {\n  let entry = JOURNAL[i];\n  // Do something with entry\n}\n```", "```js\nfor (let entry of JOURNAL) {\n  console.log(`${entry.events.length} events.`);\n}\n```", "```js\nfunction journalEvents(journal) {\n  let events = [];\n  for (let entry of journal) {\n    for (let event of entry.events) {\n      if (!events.includes(event)) {\n        events.push(event);\n      }\n    }\n  }\n  return events;\n}\n\nconsole.log(journalEvents(JOURNAL));\n// → [\"carrot\", \"exercise\", \"weekend\", \"bread\", ...]\n```", "```js\nfor (let event of journalEvents(JOURNAL)) {\n  console.log(event + \":\", phi(tableFor(event, JOURNAL)));\n}\n// → carrot:   0.0140970969\n// → exercise: 0.0685994341\n// → weekend:  0.1371988681\n// → bread:   -0.0757554019\n// → pudding: -0.0648203724\n// And so on...\n```", "```js\nfor (let event of journalEvents(JOURNAL)) {\n  let correlation = phi(tableFor(event, JOURNAL));\n  if (correlation > 0.1 || correlation < -0.1) {\n    console.log(event + \":\", correlation);\n  }\n}\n// → weekend:        0.1371988681\n// → brushed teeth: -0.3805211953\n// → candy:          0.1296407447\n// → work:          -0.1371988681\n// → spaghetti:      0.2425356250\n// → reading:        0.1106828054\n// → peanuts:        0.5902679812\n```", "```js\nfor (let entry of JOURNAL) {\n  if (entry.events.includes(\"peanuts\") &&\n     !entry.events.includes(\"brushed teeth\")) {\n    entry.events.push(\"peanut teeth\");\n  }\n}\nconsole.log(phi(tableFor(\"peanut teeth\", JOURNAL)));\n// → 1\n```", "```js\nlet todoList = [];\nfunction remember(task) {\n  todoList.push(task);\n}\nfunction getTask() {\n  return todoList.shift();\n}\nfunction rememberUrgently(task) {\n  todoList.unshift(task);\n}\n```", "```js\nconsole.log([1, 2, 3, 2, 1].indexOf(2));\n// → 1\nconsole.log([1, 2, 3, 2, 1].lastIndexOf(2));\n// → 3\n```", "```js\nconsole.log([0, 1, 2, 3, 4].slice(2, 4));\n// → [2, 3]\nconsole.log([0, 1, 2, 3, 4].slice(2));\n// → [2, 3, 4]\n```", "```js\nfunction remove(array, index) {\n  return array.slice(0, index)\n    .concat(array.slice(index + 1));\n}\nconsole.log(remove([\"a\", \"b\", \"c\", \"d\", \"e\"], 2));\n// → [\"a\", \"b\", \"d\", \"e\"]\n```", "```js\nlet kim = \"Kim\";\nkim.age = 88;\nconsole.log(kim.age);\n// → undefined\n```", "```js\nconsole.log(\"coconuts\".slice(4, 7));\n// → nut\nconsole.log(\"coconut\".indexOf(\"u\"));\n// → 5\n```", "```js\nconsole.log(\"one two three\".indexOf(\"ee\"));\n// → 11\n```", "```js\nconsole.log(\"  okay \\n \".trim());\n// → okay\n```", "```js\nconsole.log(String(6).padStart(3, \"0\"));\n// → 006\n```", "```js\nlet sentence = \"Secretarybirds specialize in stomping\";\nlet words = sentence.split(\" \");\nconsole.log(words);\n// → [\"Secretarybirds\", \"specialize\", \"in\", \"stomping\"]\nconsole.log(words.join(\". \"));\n// → Secretarybirds. specialize. in. stomping\n```", "```js\nconsole.log(\"LA\".repeat(3));\n// → LALALA\n```", "```js\nlet string = \"abc\";\nconsole.log(string.length);\n// → 3\nconsole.log(string[1]);\n// → b\n```", "```js\nfunction max(...numbers) {\n  let result = -Infinity;\n  for (let number of numbers) {\n    if (number > result) result = number;\n  }\n  return result;\n}\nconsole.log(max(4, 1, 9, -2));\n// → 9\n```", "```js\nlet numbers = [5, 1, 7];\nconsole.log(max(...numbers));\n// → 7\n```", "```js\nlet words = [\"never\", \"fully\"];\nconsole.log([\"will\", ...words, \"understand\"]);\n// → [\"will\", \"never\", \"fully\", \"understand\"]\n```", "```js\nlet coordinates = {x: 10, y: 0};\nconsole.log({...coordinates, y: 5, z: 1});\n// → {x: 10, y: 5, z: 1}\n```", "```js\nfunction randomPointOnCircle(radius) {\n  let angle = Math.random() * 2 * Math.PI;\n  return {x: radius * Math.cos(angle),\n          y: radius * Math.sin(angle)};\n}\nconsole.log(randomPointOnCircle(2));\n// → {x: 0.3667, y: 1.966}\n```", "```js\nconsole.log(Math.random());\n// → 0.36993729369714856\nconsole.log(Math.random());\n// → 0.727367032552138\nconsole.log(Math.random());\n// → 0.40180766698904335\n```", "```js\nconsole.log(Math.floor(Math.random() * 10));\n// → 2\n```", "```js\nfunction phi(table) {\n  return (table[3] * table[0] - table[2] * table[1]) /\n    Math.sqrt((table[2] + table[3]) *\n              (table[0] + table[1]) *\n              (table[1] + table[3]) *\n              (table[0] + table[2]));\n}\n```", "```js\nfunction phi([n00, n01, n10, n11]) {\n  return (n11 * n00 - n10 * n01) /\n    Math.sqrt((n10 + n11) * (n00 + n01) *\n              (n01 + n11) * (n00 + n10));\n}\n```", "```js\nlet {name} = {name: \"Faraji\", age: 23};\nconsole.log(name);\n// → Faraji\n```", "```js\nfunction city(object) {\n  return object.address?.city;\n}\nconsole.log(city({address: {city: \"Toronto\"}}));\n// → Toronto\nconsole.log(city({name: \"Vera\"}));\n// → undefined\n```", "```js\nconsole.log(\"string\".notAMethod?.());\n// → undefined\nconsole.log({}.arrayProp?.[0]);\n// → undefined\n```", "```js\n{\n  \"squirrel\": false,\n  \"events\": [\"work\", \"touched tree\", \"pizza\", \"running\"]\n}\n```", "```js\nlet string = JSON.stringify({squirrel: false,\n                             events: [\"weekend\"]});\nconsole.log(string);\n// → {\"squirrel\":false,\"events\":[\"weekend\"]}\nconsole.log(JSON.parse(string).events);\n// → [\"weekend\"]\n```", "```js\nconsole.log(sum(range(1, 10)));\n```", "```js\nlet list = {\n  value: 1,\n  rest: {\n    value: 2,\n    rest: {\n      value: 3,\n      rest: null\n    }\n }\n};\n```"]